논리 연산자

논리 합 연산(또는)
연산자: ||(또는)
| -> 비트 합 연산(한개 썼을때)
형태 : 불 || 불 -> 적어도 하나만 true면 전체 값이 true
true || true // true
true || false // true
false || true // true
false || false // false

논리 곱 연산(그리고)
연산자 : &&(그리고)
& -> 비트 곱 연산(한개 썼을때) 
형태 : 불 && 불 -> 양쪽 모든 것이 true여야 전체 값이 true
true && true // true
true && false // false
false && true // false
false && false // false

궁금 왜 이렇게 나오는지
true | false
1

- 비교 연산자가 오른쪽에만 입을 버리게 하는 방식
- 변수를 왼쪽에 쓰는 방식

(1) 3을 포함하라
x <= 3
3 >= x

(2) -2 는 포함 x
-2 < x
x > -2

(3) -3 <= x < 2
-3 <= x && x <2 닫힌 범위를 나타낼 때

(4) x < a 또는 b > x
x < a || b > x 열린 범위를 나타낼 때

드모르간의 법칙
!(12 <= 현재_시 && 현재_시 <= 13)
-> 부등식은 반대로!
-> 논리곱 논리합 교체!
12 > 현재_시 || 현재_시 > 13
-> 현재_시 < 12 || 13 < 현재_시 