식별자를 상수 / 변수로 사용하겠다 ! -> 선언 또는 정의
식별자 = 자료 -> 할당한다.
처음으로 값을 할당하는 것 -> 초기화

1. 상수 const
중복 선언 불가능

const 식별자 = '자료'
형태에서 어긋나면 오류가 난다.

2. 변수 let

let 식별자 = '자료'
let 식별자
식별자 = '자료'

변수에 값 넣기
변수 = 자료형

변수 사용하기
변수

상수와 변수의 사용 범위
고정된 값 -> 상수
변화되는 값 -> 변수

const : 재선언 x 재할당 x 
let : 재선언 x 재할당 o

## lvalue rvalue
let a = 10

a -> let value -> lvalue
-> 넣는 놈(메모리주소를 가지고 있다)
-> 할당연산자의 왼쪽에 올 수 있는 값으로, 변수나 메모리 위치를 참조할 수 있는 모든 값

10 -> right value -> rvalue
-> 꺼내는 놈, 값(메모리 주소 x)
-> 할당 연산자의 오른쪽에 올 수 있는 값으로, 살제 값을 나타낸다.

예를 들어
let a = 10;
let b = a;

라고 했을때,
a는 메모리 특정 위치에 저장이 되고 그 위치에 10이라는 값이 할당이 된다.
그 이후 b에 a 라는 메모리주소를 가진 값을 또 할당하게 된다.
그러면 b와 a는 같은 메모리 주소를 가질까? 
-> 아니다 a에 저장된 10이라는 값이 b에 할당이 된다. 이 값을 복사받아, 새로운 메모리 위치에 저장이 된다. 이때 b는 10이라는 값을 가지게 된다. 그래서 결국 b와 a는 서로 다른 메모리 주소를 가지고 있다.
